<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->
<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>VariantTableWidget</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1432308326000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1432309319000</date>
  <contentUpdateDate>1432308382000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content/>
  <object>
    <name>PhenoTips.VariantTableWidget</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>773996c6-b3ae-47f6-a59b-fe06a553b589</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>var PhenoTips = (function (PhenoTips) {
  var widgets = PhenoTips.widgets = PhenoTips.widgets || {};
  widgets.VariantDisplayTable = Class.create({
    RESULTS_TABLE_MARKER : "variant-display-table",

    /* A javascript table to display variant information. Columns can be specified in a list using the columns argument. Column titles are specified at the end of the document.

    @param columns Specify which columns to display in the table. The columns will be displayed in the order they are listed. The currently supported columns are:
      [
      "UCSC_POSITION_LINK", ##Link is displayed as chr?:????-?????
      "B_UCSC_POSITION_LINK", ##Same as previous but displayed as a PhenoTips secondary action button
      "referenceName",
      "start",
      "referenceBases",
      "alternateBases",
      "zygosity",
      "score",
      "geneSymbol",
      "geneScore",
      "effect",
      "exacAF"
      ]

    @param variants Variants must be passed as a list of JSONs in the following format based on http://ga4gh.org/#/schemas.
                    Not every field must be present but failing to include one may cause certain columns to fail.
      {
        referenceName : chromosome (chr1-22, X, Y),
        start : The start position at which this variant occurs (1-based),
        end : The end position (exclusive),
        referenceBases : The reference bases for this variant,
        alternateBases : The bases that appear instead of the reference bases,
        zygosity : number of copies of alternative alleles ("1/1" - homozygous, otherwise heterozygous),
        effect : The effect of this mutation (i.e. MISSENSE, STOPGAIN etc.),
        score : The exomiser score for the variant,
        annotations : {
          geneSymbol : The symbol of the gene to which this variant belongs,
          geneScore : The exomiser combined harmfulness score of the gene,
          exacAF : The allele frequency of the variant in the Exome Aggregation Consortium (ExAC) dataset
        }
      }

    @param container the HTML element you would like the table to be contained within. div is recommended.

    */

    initialize    : function(variants, columns, container) {
      if (!variants || !container || !columns || columns.length &lt; 1) {return;}
      var _this = this;
      this.container = container;
      this.table = new Element('table', {'class' : _this.RESULTS_TABLE_MARKER});
      this.container.insert(this.table);
      this.columns = this.getColumns(columns);
      this.data = variants;
      this.generateTable();
    },

    getColumns : function(columns){
      var _this = this;
      var activeColumns = {};
      var columnTemplates = {
        "referenceName" : {
          display : _this.displayPlainTextCell.bind(_this, "referenceName"),
          heading : _this.Strings["chromosome.heading"]
        },
        "start"      : {
          display : _this.displayPlainTextCell.bind(_this, "start"),
          heading : _this.Strings["position.heading"]
        },
        "referenceBases": {
          display : _this.displayBasesCell.bind(_this, "referenceBases"),
          heading : _this.Strings["reference.heading"]
        },
        "alternateBases" : {
          display : _this.displayBasesCell.bind(_this, "alternateBases"),
          heading : _this.Strings["alternate.heading"]
        },
        "zygosity" : {
          display :  _this.displayPlainTextCell.bind(_this, "zygosity"),
          heading : _this.Strings["zygosity.heading"]
        },
        "score" : {
          display : _this.displayScoreBarCell.bind(_this, "score"),
          heading : _this.Strings["variantScore.heading"]
        },
        "geneSymbol" : {
          display : _this.displayPlainTextCell.bind(_this, "geneSymbol"),
          heading : _this.Strings["gene.heading"]
        },
        "geneScore" : {
          display : _this.displayScoreBarCell.bind(_this, "geneScore"),
          heading : _this.Strings["geneScore.heading"]
        },
        "effect" : {
          display : _this.displayPlainTextCell.bind(_this, "effect"),
          heading : _this.Strings["codingEffect.heading"]
        },
        "exacAF" : {
          display : _this.displayAF.bind(_this, "exacAF"),
          heading : _this.Strings["exacAF.heading"]
        },
        "UCSC_POSITION_LINK" : {
          display : _this.displayUCSCPositionCell.bind(_this),
          heading : _this.Strings["UCSC_POSITION_LINK.heading"]
        },
        "B_UCSC_POSITION_LINK" : {
          display : _this.displayButtonUCSCPositionCell.bind(_this),
          heading : _this.Strings["UCSC_POSITION_LINK.heading"]
        }
      };

      columns.each(function(column){
        if (!columnTemplates[column]) {
          console.log("Error: " + column + " is not a supported column for the variant display table");
        } else {
        activeColumns[column] = columnTemplates[column];
        }
      });
      return activeColumns;
    },

    generateTable : function() {
      this.displayTableHeader(this.columns, this.table);
      this.displayTableRows();

    },
    getEmptyTableRow  : function(table) {
      var row = new Element('tr');
      table.insert(row);
      return row;
    },
    displayTableHeader : function() {
      var row = this.getEmptyTableRow(this.table);
      for (var c in this.columns) {
        if (!this.columns.hasOwnProperty(c)) {
          continue;
        }
        var heading = this.columns[c].heading;
        row.insert(new Element("th", {"class" : "variant-display-heading"}).update(heading).addClassName(c));
      }
    },
    displayTableRows : function() {
      var _this= this;
      _this.data.each(function (r) {
        _this.displayTableRow(r, _this.columns, _this.table);
      });
    },

    displayTableRow : function(r, columns, table) {
      var row = this.getEmptyTableRow(table);
      for (var c in columns) {
        row.insert(columns[c].display(r));
      }
      return row;
    },

    /* Table cell templates */

    //A cell to display plain text
    displayPlainTextCell : function (key, variant) {
      var cell = new Element('td');
      var text = this.Utils.deepFind(variant, key);
      cell.insert(text);
      return cell;
    },

    //A cell to display strings of bases. Will truncate the bases if length is greater than 9.
    displayBasesCell : function(key, variant) {
      var fullBases = this.Utils.deepFind(variant, key);
      if (fullBases.length &gt; 9) {
        var shortBases = fullBases.substring(0,9) + "...";
      } else {
        var shortBases = fullBases;
      }
      var cell = new Element('td', {
        'title' : fullBases
      });
      cell.update(shortBases);
      return cell;
    },

    //A cell to display scores using the segmented bar visualization. Scores should be between 0 and 1.
    displayScoreBarCell : function(key, variant) {
      var cell = new Element('td');
      var score = this.Utils.deepFind(variant, key);
      if (PhenoTips.widgets.SegmentedBar) {
        var barOptions = {
          segments : 5,
          segmentHeight : '5px',
          segmentWidth : '5px',
          displayPercentValueFlag : true
        };
        cell.insert(new PhenoTips.widgets.SegmentedBar(score, barOptions).generateSegmentedBar());
      } else {
        cell.update(score);
      }
      return cell;
    },

    //A cell to display variant information and provide a link to the UCSC genome browser
    displayUCSCPositionCell : function(variant){
      var cell = new Element('td');
      if (variant.referenceName &amp;&amp; variant.start &amp;&amp; variant.referenceBases) {
        var _this = this;
        var start = variant.start;
        var end = variant.end || variant.start + variant.referenceBases.length - 1;
        if (start != end) {
          var positionText = this.Strings["positionPhrase"].replace("__CHROMOSOME__", variant.referenceName.toUpperCase()).replace("__START__", start).replace("__STOP__", + end);
        } else {
          var positionText = this.Strings["snvPositionPhrase"].replace("__CHROMOSOME__", variant.referenceName.toUpperCase()).replace("__START__", start);
        }
        var positionURLFragment = variant.referenceName.toUpperCase() + ": " + start + "-" + end;
        var assembly = variant.assembly || "hg19";
        var position = new Element('a', {
          'href': 'http://genome.ucsc.edu/cgi-bin/hgTracks?db=' + assembly + '&amp;position=' + encodeURIComponent(positionURLFragment),
          'class': 'variant-position',
          'target': '__blank',
          'title': _this.Strings["UCSCLinkTitle"]
        }).update(positionText);
        cell.insert(position);
      } else {
        console.log('Error: Could not find variant information for:' + variant);
      }
      return cell;
    },

    //Displays the same information as displayUCSCPositionCell() but link is displayed as a secondary action button.
    displayButtonUCSCPositionCell : function(variant) {
      var cell = this.displayUCSCPositionCell(variant);
      var linkElement = cell.select('a.variant-position')[0];
      linkElement.addClassName('button secondary');
      linkElement.wrap(new Element('span', {'class' : 'buttonwrapper'}));
      return cell;
    },

    displayAF : function(key, variant) {
      var af = this.Utils.deepFind(variant, key);
      var cell = new Element('td');
      if (!isNaN(af)) {
        cell.insert(af);
      } else {
        cell.insert(this.Strings['message.EmptyInFo']);
      }
      return cell;
    },

    Utils :{
      deepFind : function (variant, key) {
        return (variant.hasOwnProperty(key)) ? variant[key] : variant.annotations[key];
      }
    },

    Strings : {
      'chromosome.heading'  : "chromosome",
      'position.heading'    : "position",
      'reference.heading'   : "ref",
      'alternate.heading'   : "alt",
      'variantScore.heading': "variant score",
      'gene.heading'        : "gene symbol",
      'geneScore.heading'   : "exomizer score",
      'codingEffect.heading': "gene effect",
      'exacAF.heading'      : "allele frequency",
      'UCSC_POSITION_LINK.heading': "variant",
      'zygosity.heading'    : "zygosity",
      "positionPhrase"      : "__CHROMOSOME__:__START__-__STOP__",
      "snvPositionPhrase"   : "__CHROMOSOME__:__START__",
      "UCSCLinkTitle"       : 'Visualize in the UCSC Genome Browser',
      'message.EmptyInFo'   : "unavailable"
    }

    });
    // End PhenoTips augmentation.
    return PhenoTips;
}(PhenoTips || {}));</code>
    </property>
    <property>
      <name>Variant Table</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.VariantTableWidget</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>d1d68481-2934-4228-b347-0579f1bd6ab5</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>table.variant-display-table {
  width: 100%;
}
table.variant-display-table td {
  border-left: none;
  border-right: none;
  padding: .4em .5em;
  text-align: left;
}
table .variant-display-heading {
  font-weight: normal;
  font-variant: small-caps;
  text-transform: capitalize;
}</code>
    </property>
    <property>
      <name>Variant Table Style</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
